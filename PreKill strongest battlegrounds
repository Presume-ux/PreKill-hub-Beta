from pyobfuscate import Obfuscator

# Original script to be obfuscated
script = """-- Create a ScreenGui in CoreGui for persistence after respawn
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PreKill"
screenGui.ResetOnSpawn = false
screenGui.Parent = game:GetService("CoreGui")

-- Main Background Frame for the GUI
local backgroundFrame = Instance.new("Frame")
backgroundFrame.Size = UDim2.new(0, 400, 0, 500)
backgroundFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
backgroundFrame.AnchorPoint = Vector2.new(0.5, 0.5)
backgroundFrame.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)
backgroundFrame.BorderSizePixel = 0
backgroundFrame.Parent = screenGui

-- Add UICorner for smooth edges
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 10)
corner.Parent = backgroundFrame

-- Header Frame for the title
local headerFrame = Instance.new("Frame")
headerFrame.Size = UDim2.new(1, 0, 0, 50)
headerFrame.BackgroundColor3 = Color3.new(0, 0, 0)
headerFrame.BorderSizePixel = 0
headerFrame.Parent = backgroundFrame

-- Header Label for "PreKill"
local headerLabel = Instance.new("TextLabel")
headerLabel.Size = UDim2.new(0.7, 0, 1, 0)
headerLabel.BackgroundTransparency = 1
headerLabel.Text = "PreKill"
headerLabel.TextColor3 = Color3.new(1, 1, 1)
headerLabel.TextScaled = true
headerLabel.Parent = headerFrame

-- Close Button (X)
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0.1, 0, 1, 0)
closeButton.Position = UDim2.new(0.9, 0, 0, 0)
closeButton.BackgroundTransparency = 1
closeButton.Text = "X"
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.TextScaled = true
closeButton.Parent = headerFrame

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0.1, 0, 1, 0)
minimizeButton.Position = UDim2.new(0.8, 0, 0, 0)
minimizeButton.BackgroundTransparency = 1
minimizeButton.Text = "[-]"
minimizeButton.TextColor3 = Color3.new(1, 1, 1)
minimizeButton.TextScaled = true
minimizeButton.Parent = headerFrame

-- Auto Farming Button
local autoFarmButton = Instance.new("TextButton")
autoFarmButton.Size = UDim2.new(1, 0, 0, 50)
autoFarmButton.Position = UDim2.new(0, 0, 0, 50)
autoFarmButton.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
autoFarmButton.Text = "Auto Farming"
autoFarmButton.TextColor3 = Color3.new(1, 1, 1)
autoFarmButton.TextScaled = true
autoFarmButton.Parent = backgroundFrame

-- Teleport List Frame
local teleportListFrame = Instance.new("ScrollingFrame")
teleportListFrame.Size = UDim2.new(1, 0, 0, 400) -- Adjusted to show more players
teleportListFrame.Position = UDim2.new(0, 0, 0, 50)
teleportListFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
teleportListFrame.BackgroundTransparency = 1
teleportListFrame.BorderSizePixel = 0
teleportListFrame.Parent = backgroundFrame

-- Add UICorner to Teleport List Frame
local cornerTeleport = Instance.new("UICorner")
cornerTeleport.CornerRadius = UDim.new(0, 10)
cornerTeleport.Parent = teleportListFrame

-- Close Button Functionality
closeButton.MouseButton1Click:Connect(function()
    screenGui.Enabled = false
end)

-- Minimize Button Functionality
local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        backgroundFrame.Size = UDim2.new(0, 400, 0, 50) -- Set size to show only the header
        teleportListFrame.Visible = false -- Hide the teleport list frame
    else
        backgroundFrame.Size = UDim2.new(0, 400, 0, 500) -- Restore the full size
        teleportListFrame.Visible = true -- Show the teleport list frame again
    end
end)

-- Draggable Functionality for the main GUI
local dragging = false
local dragStart = nil
local startPos = nil

headerFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = backgroundFrame.Position
    end
end)

headerFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
        local delta = input.Position - dragStart
        backgroundFrame.Position = startPos + UDim2.new(0, delta.X, 0, delta.Y)
    end
end)

headerFrame.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Function to continuously teleport to a player until they are dead or canceled
local teleporting = false
local currentTeleportingPlayer = nil

-- Function to continuously teleport to a player until they are dead or canceled
local function startTeleportingToPlayer(player)
    local localPlayer = game.Players.LocalPlayer
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()

    if character and player.Character then
        -- Check if the player is alive
        local function isPlayerAlive(p)
            return p.Character and p.Character:FindFirstChild("Humanoid") and p.Character.Humanoid.Health > 0
        end

        teleporting = true
        currentTeleportingPlayer = player

        -- Teleport to the player
        while teleporting and isPlayerAlive(player) do
            -- Adjust distance to teleport closer
            local targetDistance = 10 -- Set this to the desired distance
            local targetPosition = player.Character.PrimaryPart.Position - player.Character.PrimaryPart.CFrame.LookVector * targetDistance
            character:SetPrimaryPartCFrame(CFrame.new(targetPosition, player.Character.PrimaryPart.Position))

            -- Wait briefly before the next teleport to control the speed
            wait(0) -- Adjust this value for teleport speed
        end

        teleporting = false -- Reset flag when done
    else
        warn("Character or target player's character not found!")
    end
end

-- Function to stop teleportation
local function stopTeleportation()
    teleporting = false
    currentTeleportingPlayer = nil
end

-- Update Teleport List
local function updateTeleportList()
    teleportListFrame:ClearAllChildren()
    local players = game.Players:GetPlayers()
    teleportListFrame.CanvasSize = UDim2.new(0, 0, 0, #players * 30)

    for i, player in ipairs(players) do
        local playerLabel = Instance.new("TextButton")
        playerLabel.Size = UDim2.new(1, 0, 0, 30)
        playerLabel.Position = UDim2.new(0, 0, 0, (i - 1) * 30)
        playerLabel.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
        playerLabel.Text = player.Name
        playerLabel.TextColor3 = Color3.new(1, 1, 1)
        playerLabel.TextScaled = true
        playerLabel.Parent = teleportListFrame

        -- Start teleporting to the player when clicked
        playerLabel.MouseButton1Click:Connect(function()
            if teleporting and currentTeleportingPlayer == player then
                stopTeleportation() -- Stop teleporting if already teleporting to this player
            else
                startTeleportingToPlayer(player) -- Call the function to start teleporting
            end
        end)
    end
end

-- Event connections to handle player additions/removals
game.Players.PlayerAdded:Connect(updateTeleportList)
game.Players.PlayerRemoving:Connect(updateTeleportList)

-- Initial update to populate teleport list
updateTeleportList()

-- Change the Auto Farming button functionality to show the teleport frame
autoFarmButton.MouseButton1Click:Connect(function()
    backgroundFrame.Visible = true -- Ensure the main GUI is visible
    teleportListFrame.Visible = true -- Show the teleport list frame
end)"""

# Obfuscate the script
obfuscated_script = Obfuscator.obfuscate(script)

# Output the obfuscated script
obfuscated_script
